openapi: 3.0.0
info:
  title: Stratos Video Processing API
  description: API for the Stratos web-based video processing platform
  version: '1.0.0'
  contact:
    name: Stratos Team
    url: https://github.com/StratosIO/Stratos

servers:
  - url: http://localhost:3000/api/v1
    description: Development server

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          enum:
            - INVALID_INPUT
            - PROCESSING_FAILED
            - INVALID_CREDENTIALS
            - USER_EXISTS
            - SERVER_ERROR
            - NOT_FOUND
        message:
          type: string
          description: Detailed error message

    User:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        email:
          type: string
          format: email
        role:
          type: string
          enum: [user, admin]
        created_at:
          type: string
          format: date-time

    UserResponse:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/User'
        token:
          type: string
          description: JWT token for authentication

    VideoMetadata:
      type: object
      required:
        - filename
        - fileSize
        - format
      properties:
        filename:
          type: string
          example: "video.mp4"
        fileSize:
          type: integer
          description: File size in bytes
          example: 15000000
        format:
          type: string
          example: "mp4"
        duration:
          type: number
          description: Duration in seconds
          example: 180.5
        language:
          type: string
          description: Source video language
          example: "en"

    ProcessingOptions:
      type: object
      required:
        - outputFormat
      properties:
        outputFormat:
          type: string
          enum: [mp4, webm, hls]
          example: "mp4"
        quality:
          type: string
          enum: [high, medium, low]
          default: "high"
        resolution:
          type: string
          enum: [original, 1080p, 720p, 480p]
          default: "original"
        ai:
          type: object
          properties:
            transcription:
              type: boolean
              default: false
            translation:
              type: object
              properties:
                enabled:
                  type: boolean
                  default: false
                targetLanguage:
                  type: string
                  example: "es"

    JobCreationResponse:
      type: object
      properties:
        jobId:
          type: string
          example: "job_123abc"
        status:
          type: string
          enum: [pending, processing, completed, failed]
          example: "pending"
        estimatedDuration:
          type: number
          description: Estimated processing time in seconds

    JobStatus:
      type: object
      properties:
        jobId:
          type: string
          example: "job_123abc"
        status:
          type: string
          enum: [pending, processing, completed, failed]
          example: "processing"
        progress:
          type: number
          minimum: 0
          maximum: 100
          example: 45.5
        result:
          type: object
          properties:
            downloadUrl:
              type: string
              description: URL to download the processed video
              example: "/api/v1/downloads/job_123abc/video.mp4"
            expiresAt:
              type: string
              format: date-time
              description: When the processed file will be deleted
            transcriptionUrl:
              type: string
              description: URL to download transcription file (if requested)
              example: "/api/v1/downloads/job_123abc/transcript.txt"
        error:
          $ref: '#/components/schemas/Error'

paths:
  /auth/register:
    post:
      summary: Register a new user
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - email
                - password
              properties:
                username:
                  type: string
                  minLength: 3
                email:
                  type: string
                  format: email
                password:
                  type: string
                  minLength: 8
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '400':
          description: Invalid input or user exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /auth/login:
    post:
      summary: Authenticate user
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /jobs:
    post:
      summary: Create a new video processing job
      tags:
        - Jobs
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - videoMetadata
                - processingOptions
              properties:
                videoMetadata:
                  $ref: '#/components/schemas/VideoMetadata'
                processingOptions:
                  $ref: '#/components/schemas/ProcessingOptions'
      responses:
        '201':
          description: Job created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobCreationResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /jobs/{jobId}/status:
    get:
      summary: Get job status
      tags:
        - Jobs
      security:
        - BearerAuth: []
      parameters:
        - name: jobId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Job status retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobStatus'
        '404':
          description: Job not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /downloads/{jobId}/{filename}:
    get:
      summary: Download processed file
      tags:
        - Downloads
      security:
        - BearerAuth: []
      parameters:
        - name: jobId
          in: path
          required: true
          schema:
            type: string
        - name: filename
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: File download
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '404':
          description: File not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
