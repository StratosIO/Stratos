openapi: 3.0.0
info:
  title: Stratos Video Processing API
  description: API for the Stratos web-based ffmpeg processing platform
  version: '1.0.0'
  contact:
    name: Stratos Repo
    url: https://github.com/StratosIO/Stratos
servers:
  - url: /api
    description: Base API path

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  
  schemas:
    Error:
      type: object
      properties:
        error:
          type: string
          description: Error message
    
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        username:
          type: string
        role:
          type: string
          enum: [user, admin]
    
    LoginCredentials:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
          format: username
        password:
          type: string
          format: password
    
    RegisterCredentials:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
          format: username
        password:
          type: string
          format: password
    
    AuthResponse:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/User'
        token:
          type: string
    
    Task:
      type: object
      properties:
        id:
          type: string
          format: uuid
        command:
          type: string
        status:
          type: string
          enum: [pending, processing, completed, failed]
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        result_path:
          type: string
          nullable: true
        preview_path:
          type: string
          nullable: true
        preview_generated:
          type: boolean
          nullable: true
        error:
          type: string
          nullable: true
        files:
          type: array
          items:
            $ref: '#/components/schemas/TaskFile'
          nullable: true
        fileIds:
          type: array
          items:
            type: string
            format: uuid
          description: IDs of input files associated with this task
    
    TaskFile:
      type: object
      properties:
        filename:
          type: string
        download_url:
          type: string
        size:
          type: integer
        mime_type:
          type: string
    
    PreviewInfo:
      type: object
      properties:
        available:
          type: boolean
          description: Whether a preview is available
        generating:
          type: boolean
          description: Whether a preview is currently being generated
        path:
          type: string
          nullable: true
          description: Path to the preview file if available
        originalPath:
          type: string
          nullable: true
          description: Path to the original file
    
    PreviewGenerationStatus:
      type: object
      properties:
        status:
          type: string
          enum: [generating]
        message:
          type: string
    
    CommandSubmission:
      type: object
      required:
        - command
      properties:
        command:
          type: string
          description: Command string to execute
        type:
          type: string
          default: ffmpeg
          description: Type of command (ffmpeg by default)
    
    CommandResponse:
      type: object
      properties:
        success:
          type: boolean
        task:
          type: object
          properties:
            id:
              type: string
              format: uuid
            status:
              type: string
            created_at:
              type: string
              format: date-time
    
    TaskStatusResponse:
      type: object
      properties:
        success:
          type: boolean
        task:
          $ref: '#/components/schemas/Task'

    TaskList:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
              command:
                type: string
              status:
                type: string
                enum: [pending, processing, completed, failed]
              created_at:
                type: string
                format: date-time
              updated_at:
                type: string
                format: date-time
              result_path:
                type: string
                nullable: true
              preview_path:
                type: string
                nullable: true
              preview_generated:
                type: boolean
                nullable: true
              error:
                type: string
                nullable: true
              fileIds:
                type: array
                items:
                  type: string
                  format: uuid
        pagination:
          type: object
          properties:
            next_cursor:
              type: string
              nullable: true
            has_more:
              type: boolean
    
    FileUpload:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: object
          properties:
            id:
              type: string
              format: uuid
            file_name:
              type: string
            file_path:
              type: string
        fileInfo:
          type: object
          properties:
            name:
              type: string
            type:
              type: string
            size:
              type: integer
            id:
              type: string
              format: uuid
    
    FileList:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
              file_name:
                type: string
              file_size:
                type: integer
              mime_type:
                type: string
              uploaded_at:
                type: string
                format: date-time
              file_path:
                type: string
        pagination:
          type: object
          properties:
            next_cursor:
              type: string
              nullable: true
            has_more:
              type: boolean

paths:
  /auth/register:
    post:
      summary: Register a new user
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterCredentials'
      responses:
        '200':
          description: Registration successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '500':
          description: Registration failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /auth/login:
    post:
      summary: Login with existing credentials
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginCredentials'
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '500':
          description: Login failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /auth/me:
    get:
      summary: Get current user information
      tags:
        - Authentication
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User information retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /uploads:
    post:
      summary: Upload a file
      tags:
        - File Uploads
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - file
                - id
              properties:
                file:
                  type: string
                  format: binary
                  description: File to upload
                id:
                  type: string
                  format: uuid
                  description: Unique ID for the file
      responses:
        '200':
          description: File uploaded successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileUpload'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    
    get:
      summary: List uploaded files
      tags:
        - File Uploads
      security:
        - bearerAuth: []
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            minimum: 1
          description: Maximum number of files to return
        - name: cursor
          in: query
          required: false
          schema:
            type: string
          description: Pagination cursor for fetching next page
      responses:
        '200':
          description: List of files
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileList'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /uploads/{id}:
    delete:
      summary: Delete a file
      tags:
        - File Uploads
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: ID of the file to delete
      responses:
        '200':
          description: File deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
        '400':
          description: Invalid ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /tasks:
    post:
      summary: Submit a command for processing
      tags:
        - Tasks
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommandSubmission'
      responses:
        '201':
          description: Task created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommandResponse'
        '400':
          description: Invalid command
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    
    get:
      summary: List all tasks
      tags:
        - Tasks
      security:
        - bearerAuth: []
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            minimum: 1
          description: Maximum number of tasks to return
        - name: cursor
          in: query
          required: false
          schema:
            type: string
          description: Pagination cursor for fetching next page
      responses:
        '200':
          description: List of tasks
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskList'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /tasks/{id}:
    get:
      summary: Download task result or get task details with download links
      tags:
        - Tasks
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: ID of the task
      responses:
        '200':
          description: For completed tasks with a single output file, returns the file as a direct download. For completed tasks with multiple files, returns task details with download links. For non-completed tasks, returns task status information.
          content:
            application/json:
              schema:
                type: object
                properties:
                  task:
                    $ref: '#/components/schemas/Task'
            application/octet-stream:
              schema:
                type: string
                format: binary
                description: Direct file download for single-file completed tasks
        '400':
          description: Invalid ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Task not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    
    delete:
      summary: Delete a task
      tags:
        - Tasks
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: ID of the task to delete
      responses:
        '200':
          description: Task deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
        '400':
          description: Invalid ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Task not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /tasks/{id}/status:
    get:
      summary: Get task status
      tags:
        - Tasks
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: ID of the task
      responses:
        '200':
          description: Task status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskStatusResponse'
        '400':
          description: Invalid ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Task not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /tasks/{id}/progress:
    get:
      summary: Stream task progress using Server-Sent Events
      tags:
        - Tasks
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: ID of the task
      responses:
        '200':
          description: SSE stream of task progress events
          content:
            text/event-stream:
              schema:
                type: string
                description: Server-Sent Events stream
        '400':
          description: Invalid ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Task not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /tasks/{id}/preview:
    get:
      summary: Stream a preview of the task result for browser viewing
      tags:
        - Tasks
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: ID of the task
        - name: download
          in: query
          required: false
          schema:
            type: boolean
          description: Set to true to force download instead of inline viewing (rarely needed)
      responses:
        '200':
          description: Preview file stream
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
            video/*:
              schema:
                type: string
                format: binary
            audio/*:
              schema:
                type: string
                format: binary
            image/*:
              schema:
                type: string
                format: binary
            text/*:
              schema:
                type: string
        '202':
          description: Preview is being generated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreviewGenerationStatus'
        '400':
          description: Invalid ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Task not found or preview not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
